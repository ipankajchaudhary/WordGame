{"version":3,"sources":["Component/Navbar.js","Component/TextBox.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","src","style","height","alt","href","type","id","placeholder","TextBox","numberOfLineBreaks","words","Sentences","useState","text","setText","linebreaks","escape","match","length","split","filter","element","rows","value","onChange","event","target","onClick","toUpperCase","toLowerCase","navigator","clipboard","writeText","newText","join","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29d00efa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light  \">\r\n      <div className=\"container-fluid nav-justified\">\r\n        <img\r\n          src=\"favicon images/logo.png\"\r\n          style={{ height: \"50px\", \"borderRadius\": \"8px\" }}\r\n          className=\"mx-4\"\r\n          alt=\"\"\r\n        />\r\n        <a className=\"navbar-brand\" href=\"/counter\">\r\n          Counter\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              \r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextBox() {\r\n\r\n    const douppercase = () => {\r\n        setText(text.toUpperCase())\r\n    }\r\n    const dolowercase = () => {\r\n        setText(text.toLowerCase())\r\n    }\r\n    const onchange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const clearText = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(text); \r\n    }\r\n\r\n    \r\n    const removeExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('Type or Paste your text');\r\n\r\n    var numberOfLineBreaks\r\n    var enteredTextEncoded = escape(text);\r\n    var linebreaks = enteredTextEncoded.match(/%0A/g);\r\n    (linebreaks != null) ? numberOfLineBreaks = linebreaks.length : numberOfLineBreaks = 0;\r\n\r\n    var words\r\n    if (text === \" \")\r\n    {\r\n        words = 0;\r\n    }\r\n    else {\r\n        words = text.split(\" \").filter((element)=>{return element.length!==0}).length;\r\n    }\r\n\r\n    var Sentences\r\n    if (text === \" \") {\r\n        Sentences = 0;\r\n    }\r\n    else {\r\n        Sentences = text.split(/[.!?]/).length - 1;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <div className=\"mb-3\">\r\n            <div className=\"flex-container impclass\">\r\n                    <div className=\"p-2 imp flex-fill\">Words \r\n                        <div className=\"result\">\r\n                        {words}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-2 imp flex-fill\">Characters \r\n                        <div className=\"result\">\r\n                        {text.length}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-2 imp flex-fill\">Sentences <br /> <br />\r\n                        <div className=\"result\">\r\n                            {Sentences}\r\n                        </div>    \r\n                    </div>\r\n                    <div className=\"p-2 imp flex-fill\">Paragraph <br />  <br />\r\n                        <div className=\"result\">\r\n                            {numberOfLineBreaks}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-2 implast flex-fill\">Reading Time <br /> <br />\r\n                        <div className=\"result\" style={{\"fontSize\" : \"20px\"}}>\r\n                            {0.00070212766 * text.length} Minute\r\n                        </div>\r\n                    </div>\r\n            </div>   \r\n            <textarea className=\"form-control \" id=\"exampleFormControlTextarea1\" rows=\"9\" value={text} onChange = {onchange}></textarea>\r\n            <button className=\"btn btn-primary  mx-3 my-3\" onClick = {douppercase}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2 my-3\" onClick={dolowercase}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2 my-3\" onClick={clearText}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-3\" onClick={copyText}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-3\" onClick={removeExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Component/Navbar';\nimport TextBox from './Component/TextBox';\n// import RandomWordGenerator from './Component/RandomWordGenerator';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <>\n      \n      <Navbar></Navbar>\n      <div className=\"container\">\n      <TextBox></TextBox>\n      </div>\n        \n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}